version: '3.1'

networks:
  nestjs:
    external: false

services:
  app:
    container_name: ${APP_DOMAIN}-nestjs
    build: .
    ports:
      - 8060:3000
    volumes:
      - .:/var/www
      - /var/www/node_modules
    environment:
      - DEPLOY_ENV=dev
      - NODE_ENV=dev
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - BINANCE_API_PUBLIC_KEY=${BINANCE_API_PUBLIC_KEY}
      - BINANCE_API_PRIVATE_KEY=${BINANCE_API_PRIVATE_KEY}
    restart: always
    depends_on:
      - postgres
    networks:
      - nestjs

  postgres:
    container_name: ${APP_DOMAIN}-postgres
    image: postgres:10
    environment:
      - POSTGRES_PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    restart: always
    volumes:
      - ./db-data:/var/lib/postgresql/data
    networks:
      - nestjs
    labels:
      - 'traefik.enable=false'

  adminer:
    container_name: ${APP_DOMAIN}-adminer
    image: adminer
    ports:
      - 8080:8080
    restart: always
    links:
      - postgres
    labels:
      - 'traefik.backend=adminer-${APP_DOMAIN}'
      - 'traefik.frontend.rule=Host:adminer.${APP_DOMAIN}.localhost'
      - 'traefik.port=8080'
    networks:
      - nestjs

volumes:
  db-data:
    driver: local
